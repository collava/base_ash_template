name: Elixir Validations
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  MIX_ENV: test
permissions:
  contents: read
jobs:
  build:
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      # Specify the OTP and Elixir versions to use when building
      # and running the workflow steps.
      matrix:
        otp: ["27.2"]
        elixir: ["1.17.3-otp-27"]
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ash_base_template_test
        ports:
          - "5432:5432"
        options: "--health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{matrix.elixir}}
          otp-version: ${{matrix.otp}}

      - name: Create PLT dir
        run: |
          if [ ! -d "priv/plts" ]; then
            mkdir priv/plts
          fi

      - uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            priv/plts
          key: static-${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ github.head_ref || github.ref }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            static-${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ github.head_ref || github.ref }}-
            static-${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-refs/heads/main-

      - name: Deps Get
        run: mix deps.get

      - name: Compile
        run: mix compile --warnings-as-errors

      - name: Create database
        run: mix do ecto.create, ecto.migrate

      - name: Run Dialyzer
        run: mix dialyzer --plt priv/plts --format github

      - name: Unused dependencies
        run: mix deps.unlock --check-unused

      - name: Install tailwind for blog
        run: mix tailwind.install

      - name: Run CREDO
        run: mix credo diff --from-git-merge-base origin/main

      - name: Run Sobelow
        run: mix sobelow --config

      - name: Run COVERALLS
        run: mix coveralls.json

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Clean to rule out incremental build as a source of flakiness
        if: github.run_attempt != '1'
        run: |
          mix deps.clean --all
          mix clean
        shell: sh
